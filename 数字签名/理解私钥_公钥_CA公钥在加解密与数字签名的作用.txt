以HTTPS的安全架构来理解私钥，公钥，摘要算法，CA公钥在加解密和数字签名的作用
先明确一下，对于RSA算法来说，公钥加密，那么私钥就可以解密。私钥加密，那么公钥就可以解密。
服务器拥有RSA私钥，用该私钥生成一个RSA公钥，把这个公钥发给客户端。 客户端发给服务器的数据都是RSA公钥加密后的，只有服务器的RSA私钥能解密。
保证客户端数据不被其他机器盗取服务器发给客户端的是明文加签名，用签名保证客户得到的明文数据不是被其他机器篡改后的. 

   							RSA数据加密
客户端                                                                 服务器
RSA公钥加密         --------------传送加密后的数据---------------->       RSA私钥解密


 							RSA-SHA256签名
对原文作SHA256                                                         对原文作SHA256
得到HASH串1                                                            得到HASH串
RSA公钥解密签名     <--------------传送带签名的数据-----------------       RSA私钥对HASH串加密
得到HASH串2                                                            得到数字签名
比较两个串                                                                                         
相等即签名验证成功 
                                                                                    
正常情况下 客户端得到的公钥都是目标服务器给的， 但是也有可能攻击者机器给这个客户一个公钥，
这样客户发送的加密数据都可以都攻击者解密出来， 这就是客户收到假公钥的危害。 
为了防止客户收到假公钥， 设立一个证书颁发机构，简称CA。
客户端只接受CA给的公钥，不会接受服务器给的公钥。 
CA的做法是： 
收到服务器发来的公钥， CA用自己的私钥对这个公钥做数字签名，以保证这个公钥不会被篡改。 
CA一方面确保了发来公钥的服务器是真的， 
另一方面确保了CA所发出的公钥不会被篡改。 
这样保证了客户收到的是真公钥。

-----------   
关于根证书：
CA负责了公钥的管理
CA提供给客户的公钥，设为公钥1 
需要用公钥2计算出公钥1签名， 以保证公钥1没被修改，

公钥1，公钥1的签名，公钥2都放在一个文件里，
并且把客户的信息也放在这个文件。
这个文件就被叫做证书文件，简称公钥证书。
客户端用证书里的公钥2对公钥1做签名算法，运算出公钥1签名。
运算出的公钥1签名，和证书里的公钥1签名相等，说明公钥1没被篡改过，是合法的。
公钥证书的目的就是确保里面提供的公钥1是无法被篡改的。
CA就把这个证书发送给客户，就达到了一个客户拿到的公钥是安全的。 

那么公钥2 由需要公钥2证书里的公钥3 保证公钥2的安全， 
同理，公钥3， 又需要公钥3证书里的公钥4， 保证公钥3的安全，
这样就形成了一个公钥证书链。 
这个链的终结就是公钥根证书，相信根证书就相信这个链上的所有证书 

一般的做法是， 客户不会拿到根证书才能验证， 而是拿到一个中间证书完成验证。 
所以公钥证书，就有用户公钥证书， 中间公钥证书， 根公钥证书，
为讲解方便，公钥证书简称证书 
用户证书里的公钥是用户需要的， 
中间证书里的公钥2为用户证书里的公钥1做签名验证用。 
根证书会创建多个中间证书。 
