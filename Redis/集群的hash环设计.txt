 hash环
 先说一下hash环的问题背景：
  服务节点都胡存放大量的缓存对象，单位万为单位，比如一个服务节点存放两万个缓存对象
  集群里会有多个服务节点， 缓存对象要尽量均匀的分布在这些服务节点上。 
  一开始最简单的就是取模算法， 比如5个服务节点， 有30个缓存对象，对象按1,2,3..编号，
  那么用取模运算， 30个对象均匀分布在5个节点上， 每个节点上分布6个对象。 
  如果服务节点个数不变， 不增也不减， 那就不需要新算法了
  但是实际运行中， 服务节点个数会动态的增加和减少， 这时为了保证对象均匀分布， 
  取摸的分布算法， 会使缓存对象就会在服务节点间做大规模的迁移。 这会影响性能
  为了解决这个问题， 就有了hash环算法。 
  算法的目标是， 在服务节点动态增加或减少时间， 缓存对象的迁移在小范围进行。 
  具体的是， 只影响相邻的服务节点的对象的迁移，其他服务节点上的对象不会被迁移。 
   
   
  hash 环上有2的32次方的取值 ，  共有这么多个圆， 每个圆都有一个hash值， 
  每个服务节点， 根据服务的ip和端口， 都会算出一个hash值， 
  这个服务节点根据这个hash值就定位在hash值相同的圆上。 
  每个对象也会计算一个哈希值，这些哈希值都在huan上，顺序排列， 顺时针寻找第一个服务节点， 
  然后对象就落在这个服务节点上。 
  当增加一个服务节点， 肯定是定位在环上的两个服务节点之间，对象群按哈希值分为两部分， 
  需要迁移的只有新服务节点右边的部分， 把新服务节点右边的对象都迁移到这个新服务节点上。 
  实现对象迁移在小规模， 小范围内迁移. 