redis是用C语言开发的一个开源的高性能键值对（key-value）数据库。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止redis支持的键值数据类型如下字符串、列表（lists）、集合（sets）、有序集合（sorts sets）、哈希表（hashs）

redis的应用场景 
缓存（数据查询、短连接、新闻内容、商品内容等等）。（最多使用）
分布式集群架构中的session分离。
聊天室的在线好友列表。
任务队列。（秒杀、抢购、12306等等） 
应用排行榜。 
网站访问统计。 
数据过期处理（可以精确到毫秒）

pending的原因是没找pvc


ubuntu1@docker-registry:~/k8s_yaml/redis$ k describe po redis-s-0
Name:           redis-s-0
Namespace:      default
Priority:       0
Node:           <none>
Labels:         app=redis-p
                appCluster=redis-cluster
                controller-revision-hash=redis-s-594bb76f9f
                statefulset.kubernetes.io/pod-name=redis-s-0
Annotations:    <none>
Status:         Pending
IP:
Controlled By:  StatefulSet/redis-s
Containers:
  redis-c:
    Image:       redis
    Ports:       6379/TCP, 16379/TCP
    Host Ports:  0/TCP, 0/TCP
    Command:
      redis-server
    Args:
      /etc/redis/redis.conf
      --protected-mode
      no
    Requests:
      cpu:        100m
      memory:     100Mi
    Environment:  <none>
    Mounts:
      /etc/redis from redis-conf (rw)
      /var/lib/redis from data-redis (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-x5g8r (ro)
Conditions:
  Type           Status
  PodScheduled   False
Volumes:
  data-redis:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  data-redis-redis-s-0
    ReadOnly:   false
  redis-conf:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      redis-conf
    Optional:  false
  default-token-x5g8r:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-x5g8r
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type     Reason            Age                From               Message
  ----     ------            ----               ----               -------
  Warning  FailedScheduling  15s (x2 over 16s)  default-scheduler  pod has unbound immediate PersistentVolumeClaims (repeated 3 times)

==============================================
 Type     Reason       Age   From               Message
  ----     ------       ----  ----               -------
  Normal   Scheduled    2m8s  default-scheduler  Successfully assigned default/redis-0 to etcd0
  Warning  FailedMount  2m7s  kubelet, etcd0     MountVolume.SetUp failed for volume "nfs-pv5" : mount failed: exit status 32
Mounting command: systemd-run
Mounting arguments: --description=Kubernetes transient mount for /var/lib/kubelet/pods/ed8ff85a-5ad0-4afa-abe6-fe7ef87b9889/volumes/kubernetes.io~nfsnfs-pv5 --scope -- mount -t nfs 192.168.0.211:/usr/local/k8s/redis/pv5 /var/lib/kubelet/pods/ed8ff85a-5ad0-4afa-abe6-fe7ef87b9889/volumes/kubernetes.o~nfs/nfs-pv5
Output: Running scope as unit: run-rb6162c53c44e41e79bd443d735bfb73d.scope
mount.nfs: access denied by server while mounting 192.168.0.211:/usr/local/k8s/redis/pv5
  Warning  FailedMount  2m6s  kubelet, etcd0  MountVolume.SetUp failed for volume "nfs-pv5" : mount failed: exit status 32

ubuntu1@docker-registry:~/k8s_yaml/redis$ sudo apt-get install nfs-common   -y
正在读取软件包列表... 完成
正在分析软件包的依赖关系树
正在读取状态信息... 完成
将会同时安装下列软件：
  keyutils libnfsidmap2 libtirpc1 rpcbind
建议安装：
  open-iscsi watchdog

下列【新】软件包将被安装：
  keyutils libnfsidmap2 libtirpc1 nfs-common rpcbind
升级了 0 个软件包，新安装了 5 个软件包，要卸载 0 个软件包，有 121 个软件包未被升级。
需要下载 397 kB 的归档。
解压缩后会消耗 1,358 kB 的额外空间。
获取:1 http://cn.archive.ubuntu.com/ubuntu bionic/main amd64 keyutils amd64 1.5.9-9.2ubuntu2 [47.9 kB]
获取:2 http://cn.archive.ubuntu.com/ubuntu bionic/main amd64 libnfsidmap2 amd64 0.25-5.1 [27.2 kB]
获取:3 http://cn.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtirpc1 amd64 0.2.5-1.2ubuntu0.1 [75.7 kB]
获取:4 http://cn.archive.ubuntu.com/ubuntu bionic/main amd64 rpcbind amd64 0.2.3-0.6 [40.6 kB]
获取:5 http://cn.archive.ubuntu.com/ubuntu bionic-updates/main amd64 nfs-common amd64 1:1.3.4-2.1ubuntu5.2 [205 kB]
已下载 397 kB，耗时 4秒 (102 kB/s)

============================
kubectl批量删除pvc
 kubectl get pvc  | awk '{print $1}' |grep -v  NAME |xargs kubectl delete pvc

同理 批量删除 pv
 kubectl get pv  | awk '{print $1}' |grep -v  NAME |xargs kubectl delete pv

 ========================================
 node1@docker-app:~$ sudo /etc/init.d/nfs-kernel-server stop
 [ ok ] Stopping nfs-kernel-server (via systemctl): nfs-kernel-server.service.
 node1@docker-app:~$ sudo /etc/init.d/nfs-kernel-server start
 [....] Starting nfs-kernel-server (via systemctl): nfs-kernel-server.serviceJob for nfs-server.service canceled.
  failed!
 node1@docker-app:~$ sudo /etc/init.d/nfs-kernel-server status
 ● nfs-server.service - NFS server and services
    Loaded: loaded (/lib/systemd/system/nfs-server.service; enabled; vendor preset: enabled)
    Active: failed (Result: exit-code) since Mon 2019-12-30 22:55:45 CST; 13s ago
   Process: 82794 ExecStopPost=/usr/sbin/exportfs -f (code=exited, status=0/SUCCESS)
   Process: 82788 ExecStopPost=/usr/sbin/exportfs -au (code=exited, status=0/SUCCESS)
   Process: 77754 ExecStop=/usr/sbin/rpc.nfsd 0 (code=exited, status=0/SUCCESS)
   Process: 42382 ExecStart=/usr/sbin/rpc.nfsd $RPCNFSDARGS (code=exited, status=0/SUCCESS)
   Process: 82787 ExecStartPre=/usr/sbin/exportfs -r (code=exited, status=1/FAILURE)
  Main PID: 42382 (code=exited, status=0/SUCCESS)

 Dec 30 22:55:44 docker-app systemd[1]: Starting NFS server and services...
 Dec 30 22:55:44 docker-app exportfs[82787]: exportfs: /etc/exports [1]: Neither 'subtree_check' or 'no_subtree_check' specified for export…edis/pv1".
 Dec 30 22:55:44 docker-app exportfs[82787]:   Assuming default behaviour ('no_subtree_check').
 Dec 30 22:55:44 docker-app exportfs[82787]:   NOTE: this default has changed since nfs-utils version 1.0.x
 Dec 30 22:55:44 docker-app exportfs[82787]: exportfs: /etc/exports:2: unknown keyword "inseruce"
 Dec 30 22:55:44 docker-app systemd[1]: nfs-server.service: Control process exited, code=exited status=1
 Dec 30 22:55:45 docker-app systemd[1]: nfs-server.service: Failed with result 'exit-code'.
 Dec 30 22:55:45 docker-app systemd[1]: Stopped NFS server and services.
 Hint: Some lines were ellipsized, use -l to show in full.


===================================
node1@docker-app:/usr/local/k8s/redis$ sudo chmod 777 *
node1@docker-app:/usr/local/k8s/redis$ ll
total 32
drwxr-xr-x 8 root root 4096 Dec 29 10:24 ./
drwxr-xr-x 3 root root 4096 Dec 29 10:24 ../
drwxrwxrwx 2 root root 4096 Dec 29 10:24 pv1/
drwxrwxrwx 2 root root 4096 Dec 29 10:24 pv2/
drwxrwxrwx 2 root root 4096 Dec 29 10:24 pv3/
drwxrwxrwx 2 root root 4096 Dec 30 23:01 pv4/
drwxrwxrwx 2 root root 4096 Dec 29 10:24 pv5/
drwxrwxrwx 2 root root 4096 Dec 29 10:24 pv6/
node1@docker-app:/usr/local/k8s/redis$ cd pv4
node1@docker-app:/usr/local/k8s/redis/pv4$ ls
a  b  c


=================================================

ubuntu1@docker-registry:~/k8s_yaml/redis$ sudo umount 192.168.0.211:/usr/local/k8s/redis/pv4
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f
1.txt                   headless-service.yaml   installredis.sh         pvc.yaml                redispv.yaml
a/                      installNfs.sh           nfsClient.sh            redis.conf              redis_statefulset.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ mv redispv.yaml pv.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ ls
1.txt  a  headless-service.yaml  installNfs.sh  installredis.sh  nfsClient.sh  pvc.yaml  pv.yaml  redis.conf  redis_statefulset.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ mv redis_statefulset.yaml statefulset.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f pv
pvc.yaml  pv.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f pv
pvc.yaml  pv.yaml
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f pv.yaml
persistentvolume/nfs-pv1 created
persistentvolume/nfs-vp2 created
persistentvolume/nfs-pv3 created
persistentvolume/nfs-pv4 created
persistentvolume/nfs-pv5 created
persistentvolume/nfs-pv6 created
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f pvc.yaml
persistentvolumeclaim/data-redis-0 created
persistentvolumeclaim/data-redis-1 created
persistentvolumeclaim/data-redis-2 created
persistentvolumeclaim/data-redis-3 created
persistentvolumeclaim/data-redis-4 created
persistentvolumeclaim/data-redis-5 created
ubuntu1@docker-registry:~/k8s_yaml/redis$ k apply -f statefulset.yaml
statefulset.apps/redis created
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po
NAME      READY   STATUS              RESTARTS   AGE
redis-0   0/1     ContainerCreating   0          7s
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po
NAME      READY   STATUS              RESTARTS   AGE
redis-0   0/1     ContainerCreating   0          9s
ubuntu1@docker-registry:~/k8s_yaml/redis$ k describe po redis-0
Name:           redis-0
Namespace:      default
Priority:       0
Node:           etcd0/192.168.0.204
Start Time:     Mon, 30 Dec 2019 23:07:22 +0800
Labels:         app=redis-p
                appCluster=redis-cluster
                controller-revision-hash=redis-56cfddcd57
                statefulset.kubernetes.io/pod-name=redis-0
Annotations:    cni.projectcalico.org/podIP: 192.169.3.2/32
Status:         Running
IP:             192.169.3.2
Controlled By:  StatefulSet/redis
Containers:
  redis-c:
    Container ID:  docker://1d8b210cc4ebdf13af101a5ae1dcea7864edc3188906efdb6dcc0d4fdd2246cb
    Image:         redis
    Image ID:      docker-pullable://redis@sha256:21b037b4f6964887bb12fd8d72d06c7ab1f231a58781b6ca2ceee0febfeb0d36
    Ports:         6379/TCP, 16379/TCP
    Host Ports:    0/TCP, 0/TCP
    Command:
      redis-server
    Args:
      /etc/redis/redis.conf
      --protected-mode
      no
    State:          Running
      Started:      Mon, 30 Dec 2019 23:07:35 +0800
    Ready:          True
    Restart Count:  0
    Requests:
      cpu:        100m
      memory:     100Mi
    Environment:  <none>
    Mounts:
      /etc/redis from redis-conf (rw)
      /var/lib/redis from data (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-x5g8r (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  data:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  data-redis-0
    ReadOnly:   false
  redis-conf:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      redis-conf
    Optional:  false
  default-token-x5g8r:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-x5g8r
    Optional:    false
QoS Class:       Burstable
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  29s   default-scheduler  Successfully assigned default/redis-0 to etcd0
  Normal  Pulling    23s   kubelet, etcd0     Pulling image "redis"
  Normal  Pulled     17s   kubelet, etcd0     Successfully pulled image "redis"
  Normal  Created    17s   kubelet, etcd0     Created container redis-c
  Normal  Started    16s   kubelet, etcd0     Started container redis-c
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po
NAME      READY   STATUS              RESTARTS   AGE
redis-0   1/1     Running             0          33s
redis-1   1/1     Running             0          18s
redis-2   0/1     ContainerCreating   0          6s
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po
NAME      READY   STATUS              RESTARTS   AGE
redis-0   1/1     Running             0          44s
redis-1   1/1     Running             0          29s
redis-2   1/1     Running             0          17s
redis-3   1/1     Running             0          8s
redis-4   0/1     ContainerCreating   0          2s
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po
NAME      READY   STATUS              RESTARTS   AGE
redis-0   1/1     Running             0          47s
redis-1   1/1     Running             0          32s
redis-2   1/1     Running             0          20s
redis-3   1/1     Running             0          11s
redis-4   0/1     ContainerCreating   0          5s
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po -owide
NAME      READY   STATUS              RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES
redis-0   1/1     Running             0          52s   192.169.3.2   etcd0        <none>           <none>
redis-1   1/1     Running             0          37s   192.169.2.2   ubuntunode   <none>           <none>
redis-2   1/1     Running             0          25s   192.169.1.5   docker-app   <none>           <none>
redis-3   1/1     Running             0          16s   192.169.3.3   etcd0        <none>           <none>
redis-4   1/1     Running             0          10s   192.169.1.6   docker-app   <none>           <none>
redis-5   0/1     ContainerCreating   0          2s    <none>        ubuntunode   <none>           <none>
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po -owide
NAME      READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES
redis-0   1/1     Running   0          58s   192.169.3.2   etcd0        <none>           <none>
redis-1   1/1     Running   0          43s   192.169.2.2   ubuntunode   <none>           <none>
redis-2   1/1     Running   0          31s   192.169.1.5   docker-app   <none>           <none>
redis-3   1/1     Running   0          22s   192.169.3.3   etcd0        <none>           <none>
redis-4   1/1     Running   0          16s   192.169.1.6   docker-app   <none>           <none>
redis-5   1/1     Running   0          8s    192.169.2.3   ubuntunode   <none>           <none>
ubuntu1@docker-registry:~/k8s_yaml/redis$ k get po -owide
NAME      READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES
redis-0   1/1     Running   0          61s   192.169.3.2   etcd0        <none>           <none>
redis-1   1/1     Running   0          46s   192.169.2.2   ubuntunode   <none>           <none>
redis-2   1/1     Running   0          34s   192.169.1.5   docker-app   <none>           <none>
redis-3   1/1     Running   0          25s   192.169.3.3   etcd0        <none>           <none>
redis-4   1/1     Running   0          19s   192.169.1.6   docker-app   <none>           <none>
redis-5   1/1     Running   0          11s   192.169.2.3   ubuntunode   <none>           <none>

===================================================

[centos5@68-node redis]$ kubectl exec -ti busybox -- nslookup redis-0.redis-p-service
Server:         10.96.0.10
Address:        10.96.0.10:53

Non-authoritative answer:

*** Can't find redis-0.redis-p-service: No answer

[centos5@68-node redis]$ k get svc
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                         AGE
kubernetes      ClusterIP   10.96.0.1      <none>        443/TCP                         45h
redis-service   ClusterIP   None           <none>        6379/TCP                        4m13s
svc-1-name      NodePort    10.96.75.221   <none>        8081:30001/TCP,8085:30720/TCP   44h
[centos5@68-node redis]$ k describe svc redis-service
Name:              redis-service
Namespace:         default
Labels:            app=redis
Annotations:       kubectl.kubernetes.io/last-applied-configuration:
                     {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"redis"},"name":"redis-service","namespace":"default"},"s...
Selector:          app=redis-p,appCluster=redis-cluster
Type:              ClusterIP
IP:                None
Port:              redis-port  6379/TCP
TargetPort:        6379/TCP
Endpoints:         192.168.168.193:6379,192.168.173.72:6379,192.168.184.67:6379 + 3 more...
Session Affinity:  None
Events:            <none>
[centos5@68-node redis]$ k get po -owide
NAME              READY   STATUS    RESTARTS   AGE    IP                NODE       NOMINATED NODE   READINESS GATES
busybox           1/1     Running   0          12m    192.168.173.76    212-node   <none>           <none>
rc-tomcat-pnv45   1/1     Running   2          22h    192.168.173.70    212-node   <none>           <none>
redis-0           1/1     Running   0          155m   192.168.173.72    212-node   <none>           <none>
redis-1           1/1     Running   0          154m   192.168.99.129    213-node   <none>           <none>
redis-2           1/1     Running   0          15m    192.168.224.194   215-node   <none>           <none>
redis-3           1/1     Running   0          12m    192.168.251.66    216-node   <none>           <none>
redis-4           1/1     Running   0          11m    192.168.184.67    214-node   <none>           <none>
redis-5           1/1     Running   0          148m   192.168.168.193   218-node   <none>           <none>
ubuntu            1/1     Running   0          145m   192.168.173.73    212-node   <none>           <none>
=========================

root@ubuntu:/# redis-trib.py create   `dig +short redis-0.redis-service.default.svc.cluster.local`:6379   `dig +short redis-1.redis-service.default.svc.cluster.local`:6379   `dig +short redis-2.redis-service.default.svc.cluster.local`:6379
Redis-trib 0.5.1 Copyright (c) HunanTV Platform developers
INFO:root:Instance at 192.168.173.72:6379 checked
INFO:root:Instance at 192.168.224.194:6379 checked
INFO:root:Instance at 192.168.99.129:6379 checked
INFO:root:Add 5462 slots to 192.168.173.72:6379
INFO:root:Add 5461 slots to 192.168.224.194:6379
INFO:root:Add 5461 slots to 192.168.99.129:6379
root@ubuntu:/# redis-trib.py replicate \
>   --master-addr `dig +short redis-0.redis-service.default.svc.cluster.local`:6379 \
>   --slave-addr `dig +short redis-3.redis-service.default.svc.cluster.local`:6379
Redis-trib 0.5.1 Copyright (c) HunanTV Platform developers
INFO:root:Instance at 192.168.251.66:6379 has joined 192.168.173.72:6379; now set replica
INFO:root:Instance at 192.168.251.66:6379 set as replica to edf719dcffa78650f83aa0f7bffadaf6375f87ca
root@ubuntu:/# redis-trib.py replicate \
>   --master-addr `dig +short redis-1.redis-service.default.svc.cluster.local`:6379 \
>   --slave-addr `dig +short redis-4.redis-service.default.svc.cluster.local`:6379
Redis-trib 0.5.1 Copyright (c) HunanTV Platform developers
INFO:root:Instance at 192.168.184.67:6379 has joined 192.168.99.129:6379; now set replica
INFO:root:Instance at 192.168.184.67:6379 set as replica to 2a577214e3a34895a2e0f1bf536b2f69d8a32c88
root@ubuntu:/# redis-trib.py replicate \
>   --master-addr `dig +short redis-2.redis-service.default.svc.cluster.local`:6379 \
>   --slave-addr `dig +short redis-5.redis-service.default.svc.cluster.local`:6379
Redis-trib 0.5.1 Copyright (c) HunanTV Platform developers
INFO:root:Instance at 192.168.168.193:6379 has joined 192.168.224.194:6379; now set replica
INFO:root:Instance at 192.168.168.193:6379 set as replica to aa942957ca63658b423a1f1bce541fe2ebf11cd1

===================================================

[centos5@68-node redis]$ kubectl exec -it redis-2 /bin/bash
root@redis-2:/data#  /usr/local/bin/redis-cli -c
127.0.0.1:6379> cluster nodes
a542871509355f2828aaf564a5835d755f212ad4 192.168.168.193:6379@16379 slave aa942957ca63658b423a1f1bce541fe2ebf11cd1 0 1578136015982 5 connected
8f031886caee2625c1024addbba1cee0956bf2be 192.168.184.67:6379@16379 slave 2a577214e3a34895a2e0f1bf536b2f69d8a32c88 0 1578136015000 4 connected
a46a631678af1b56fda774c48df65506df8bc14a 192.168.251.66:6379@16379 slave edf719dcffa78650f83aa0f7bffadaf6375f87ca 0 1578136015000 3 connected
edf719dcffa78650f83aa0f7bffadaf6375f87ca 192.168.173.72:6379@16379 master - 0 1578136014953 0 connected 0-5461
aa942957ca63658b423a1f1bce541fe2ebf11cd1 192.168.224.194:6379@16379 myself,master - 0 1578136014000 1 connected 5462-10922
2a577214e3a34895a2e0f1bf536b2f69d8a32c88 192.168.99.129:6379@16379 master - 0 1578136014000 2 connected 10923-16383
127.0.0.1:6379>


127.0.0.1:6379> cluster info
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:5
cluster_my_epoch:1
cluster_stats_messages_ping_sent:633
cluster_stats_messages_pong_sent:647
cluster_stats_messages_meet_sent:4
cluster_stats_messages_sent:1284
cluster_stats_messages_ping_received:646
cluster_stats_messages_pong_received:637
cluster_stats_messages_meet_received:1
cluster_stats_messages_received:1284


===========================================
在192.168.0.215上看nfs上的数据，redis生成文件会存在这里：
[node1@215-node redis]$ ll /usr/local/k8s/redis/pv3
总用量 8
-rw-r--r--. 1 root root   0 1月   4 03:23 appendonly.aof
-rw-r--r--. 1 root root 175 1月   4 06:02 dump.rdb
-rw-r--r--. 1 root root 813 1月   4 06:04 nodes.conf

===============================================

apiVersion: v1
kind: Service
metadata:
  name: redis-access-service
  labels:
    app: redis
spec:
  ports:
    - name: redis-port
      protocol: "TCP"
      port: 6379
      targetPort: 6379
  selector:
    app: redis-p
    appCluster: redis-cluster

[centos5@68-node redis]$ k get svc -owide
NAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                         AGE   SELECTOR
kubernetes             ClusterIP   10.96.0.1      <none>        443/TCP                         46h   <none>
redis-access-service   ClusterIP   10.96.93.123   <none>        6379/TCP                        29m   app=redis-p,appCluster=redis-cluster
redis-service          ClusterIP   None           <none>        6379/TCP                        60m   app=redis-p,appCluster=redis-cluster
svc-1-name             NodePort    10.96.75.221   <none>        8081:30001/TCP,8085:30720/TCP   45h   name=rc-tomcat-template-label


[centos5@68-node redis]$ k get svc -o wide
NAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                         AGE   SELECTOR
kubernetes             ClusterIP   10.96.0.1      <none>        443/TCP                         46h   <none>
redis-access-service   ClusterIP   10.96.93.123   <none>        6379/TCP                        41m   app=redis-p,appCluster=redis-cluster
redis-service          ClusterIP   None           <none>        6379/TCP                        71m   app=redis-p,appCluster=redis-cluster
svc-1-name             NodePort    10.96.75.221   <none>        8081:30001/TCP,8085:30720/TCP   46h   name=rc-tomcat-template-label
[centos5@68-node redis]$ redis-cli -h 10.96.93.123
10.96.93.123:6379> client-info
(error) ERR unknown command `client-info`, with args beginning with:
10.96.93.123:6379> client-info
[centos5@68-node redis]$ redis-cli -h 10.96.93.123
10.96.93.123:6379> cluster info
cluster_state:ok
cluster_slots_assigned:16384
cluster_slots_ok:16384
cluster_slots_pfail:0
cluster_slots_fail:0
cluster_known_nodes:6
cluster_size:3
cluster_current_epoch:5
cluster_my_epoch:2
cluster_stats_messages_ping_sent:7047
cluster_stats_messages_pong_sent:6919
cluster_stats_messages_meet_sent:3
cluster_stats_messages_sent:13969
cluster_stats_messages_ping_received:6917
cluster_stats_messages_pong_received:7050
cluster_stats_messages_meet_received:2
cluster_stats_messages_received:13969

============================
    3  cat << EOF >> /etc/apt/sources.list
deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
EOF

    4  apt-get update
    5  apt-get install -y vim wget python2.7 python-pip redis-tools dnsutils
    6  pip install redis-trib==0.5.1
    7  redis-trib.py create   `dig +short redis-app-0.redis-service.default.svc.cluster.local`:6379   `dig +short redis-app-1.redis-service.default.svc.cluster.local`:6379 \
    8  redis-trib.py create   `dig +short redis-0.redis-service.default.svc.cluster.local`:6379   `dig +short redis-1.redis-service.default.svc.cluster.local`:6379   `dig +short redis-2.redis-service.default.svc.cluster.local`:6379
    9  redis-trib.py replicate   --master-addr `dig +short redis-0.redis-service.default.svc.cluster.local`:6379   --slave-addr `dig +short redis-3.redis-service.default.svc.cluster.local`:6379
   10  redis-trib.py replicate   --master-addr `dig +short redis-1.redis-service.default.svc.cluster.local`:6379   --slave-addr `dig +short redis-4.redis-service.default.svc.cluster.local`:6379
   11  redis-trib.py replicate   --master-addr `dig +short redis-2.redis-service.default.svc.cluster.local`:6379   --slave-addr `dig +short redis-5.redis-service.default.svc.cluster.local`:6379

====================================
[node1@215-node ~]$ sudo systemctl status nfs-server
[sudo] node1 的密码：
● nfs-server.service - NFS server and services
   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; disabled; vendor preset: disabled)
  Drop-In: /run/systemd/generator/nfs-server.service.d
           └─order-with-mounts.conf
   Active: inactive (dead)
[node1@215-node ~]$ sudo systemctl start  nfs-server
[node1@215-node ~]$ sudo systemctl status nfs-server
● nfs-server.service - NFS server and services
   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; disabled; vendor preset: disabled)
  Drop-In: /run/systemd/generator/nfs-server.service.d
           └─order-with-mounts.conf
   Active: active (exited) since Sat 2020-01-04 23:16:46 EST; 1s ago
  Process: 95867 ExecStart=/bin/sh -c if systemctl -q is-active gssproxy; then systemctl reload gssproxy ; fi (code=exited, stat>
  Process: 95848 ExecStart=/usr/sbin/rpc.nfsd (code=exited, status=0/SUCCESS)
  Process: 95846 ExecStartPre=/usr/sbin/exportfs -r (code=exited, status=0/SUCCESS)
 Main PID: 95867 (code=exited, status=0/SUCCESS)


1月 04 23:16:45 215-node systemd[1]: Starting NFS server and services...
1月 04 23:16:46 215-node systemd[1]: Started NFS server and services.


nfs 没有启动， pod redis会error， nfs启动好了， pod Redis会自动变为running, 说明pod redis,一直去尝试挂载
